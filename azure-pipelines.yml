trigger:
- main

resources:
- repo: self

pool:
  name: luver-pool
  
variables:
  dockerhub-registry-connection: connect-profile-dockerhub
  dockerhub-repo: luverk1d/dotnet-project-for-altenar

stages:
- stage: CI
  displayName: Build an app and push do docker registry
  jobs:
  - job: Git_versioning
    displayName: Calculate new version and create tag/release
    steps:
      - checkout: self
        fetchDepth: 0

      - task: gitversion-setup@4
        displayName: Gitversion install
        inputs:
          versionSpec: '6.4.x'

      - task: gitversion-execute@4
        name: gitVersion_vars
        displayName: Calculate git version

      - task: Bash@3
        displayName: Show git version
        inputs:
          targetType: inline
          script: "echo $(GitVersion_FullSemVer)"

  - job: Docker_work
    displayName: Build a docker image and push
    variables:
      gitVersion: $[ dependencies.Git_versioning.outputs['gitVersion_vars.GitVersion_FullSemVer'] ]
      backend-tag: 'backend-image-v$(gitVersion)'
      frontend-tag: 'frontend-image-v$(gitVersion)'
    steps:
    - task: Bash@3
      inputs:
        targetType: inline
        script: "echo 'newVersion is $(gitVersion)'"

    - task: Docker@2
      displayName: Login into docker account
      inputs:
        command: login
        containerRegistry: $(dockerhub-registry-connection)

    - task: Docker@2
      displayName: Build a backend image
      inputs:
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/todolistAltenar/backend/dockerfile'
        repository: $(dockerhub-repo)
        tags: |
          $(backend-tag)

    - task: Docker@2
      displayName: Build a frontend image
      inputs:
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/todolistAltenar/frontend/dockerfile'
        repository: $(dockerhub-repo)
        tags: |
          $(frontend-tag)

    - task: Docker@2
      displayName: Logout from docker account
      inputs:
        command: logout
        containerRegistry: $(dockerhub-registry-connection)

- stage: CD
  displayName: Db update by migration
  jobs: 
  - job: Migration_work
    displayName: Update db via dotnet migrations
    steps:
    - task: Bash@3
      displayName: dotnet-ef tool installation check
      inputs:
        targetType: inline
        script: |
          if dotnet tool list | grep dotnet-ef; then
            echo "##vso[task.setvariable variable=isInstalled]true"
          else
            echo "##vso[task.setvariable variable=isInstalled]false"
          fi

    - task: Bash@3
      displayName: Install dotnet-ef tool
      inputs:
        targetType: inline
        script: |
          if [ "$(isInstalled)" = "false" ]; then
            dotnet new tool-manifest
            dotnet tool install dotnet-ef
          fi
        workingDirectory: "$(Build.SourcesDirectory)"

    - task: Bash@3
      displayName: updatee db
      inputs:
        targetType: inline
        script: dotnet ef database update --connection "$(CONNECTION-STRING)"
        workingDirectory: "$(Build.SourcesDirectory)/todolistAltenar/backend/todolistProject.API"