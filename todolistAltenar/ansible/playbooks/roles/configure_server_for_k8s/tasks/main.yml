---
# tasks file for configure_server_for_k8s
- name: Turn off SELinux
  ansible.builtin.replace:
    path: /etc/selinux/config
    regexp: 's/^SELINUX[^ ]*'
    replace: '/SELINUX=permissive/'

- name: Turn off swap config file
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: '^([^#].*\bswap\b.*)$'
    replace: '# \1'

- name: Turn off swap
  ansible.builtin.shell: swapoff -a

- name: Create file to start modules
  ansible.builtin.file:
    path: /etc/modules-load.d/k8s.conf
    state: touch
    mode: '0544'

- name: Write modules in file
  ansible.builtin.blockinfile:
    path: /etc/modules-load.d/k8s.conf
    block: |
      overlay
      br_netfilter

- name: Create file to turn on core options
  ansible.builtin.file:
    path: /etc/sysctl.d/k8s.conf
    state: touch
    mode: '0544'

- name: Write core options in file
  ansible.builtin.blockinfile:
    path: /etc/sysctl.d/k8s.conf
    block: |
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: Add listening ports in firewalld for master nodes
  ansible.posix.firewalld:
    port: '{{ item }}/tcp'
    permanent: true
    state: enabled
  loop:
    - '6443'
    - '2379'
    - '10250'
    - '10259'
    - '10257'
  when: inventory_hostname in groups['master-nodes']
  notify:
    - Reload firewalld
    - Reboot server

- name: Add listening ports in filewalld for worker nodes
  ansible.posix.firewalld:
    port: '{{ item }}/tcp'
    permanent: true
    state: enabled
  loop:
    - '10250'
    - '30000-32767'
  when: inventory_hostname in groups['worker-nodes']
  notify:
    - Reload firewalld
    - Reboot server

- name: Download runC repo
  ansible.builtin.get_url:
    url: https://github.com/opencontainers/runc/releases/download/v1.2.5/runc.amd64
    dest: /opt/runc.amd64

- name: Install runC
  ansible.builtin.shell: install -m 755 runc.amd64 /usr/local/sbin/runc
  args:
    chdir: /opt/

- name: Download containerd repo
  ansible.builtin.get_url:
    url: https://github.com/containerd/containerd/releases/download/v2.1.2/containerd-2.1.2-linux-amd64.tar.gz
    dest: /opt/containerd-2.1.2-linux-amd64.tar.gz

- name: Unarchive containerd repo
  ansible.builtin.unarchive:
    src: /opt/containerd-2.1.2-linux-amd64.tar.gz
    dest: /usr/local/
    remote_src: true

- name: Download containerd systemd unit
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
    dest: /etc/systemd/system/containerd.service

- name: Systemd reread configs
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Start containerd daemon
  ansible.builtin.systemd_service:
    name: containerd
    enabled: true
    state: started

- name: Create dir for containerd
  ansible.builtin.file:
    path: /etc/containerd/
    state: directory
    mode: '0755'

- name: Copy stdout containerd default config
  ansible.builtin.shell: /usr/local/bin/containerd config default
  register: containerd_config_default_write

- name: Copy config to temp
  ansible.builtin.copy:
    dest: /tmp/containerd_config.toml
    content: '{{ containerd_config_default_write.stdout }}'

- name: Change SystemdCgroup to true
  ansible.builtin.lineinfile:
    path: /tmp/containerd_config.toml
    insertafter: '.*\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]$'
    line: '          SystemdCgroup = true'
    state: present

- name: Copy config to default path
  ansible.builtin.copy:
    src: /tmp/containerd_config.toml
    dest: /etc/containerd/config.toml
    mode: '0644'
    remote_src: true
  register: containerd_config

- name: Restart containerd daemon
  ansible.builtin.systemd_service:
    name: containerd
    enabled: true
    state: restarted
  when: containerd_config.changed == true