---
# tasks file for download_apps
- name: Install git and gh for jumphosts
  when: inventory_hostname in groups['jump-hosts']
  block:
    - name: Add gh auth repo
      shell: curl -fsSL https://cli.github.com/packages/rpm/gh-cli.repo | sudo tee /etc/yum.repos.d/github-cli.repo
      
    - name: Install git + gh auth login
      ansible.builtin.dnf:
        name: 
          - git
          - gh
        state: present

- name: Install k8s for master nodes and worker nodes
  when: inventory_hostname in groups['master-nodes'] or inventory_hostname in groups['worker-nodes']
  block:
    - name: Turn off SELinux
      ansible.builtin.replace:
        path: /etc/selinux/config
        regexp: 's/^SELINUX[^ ]*'
        replace: '/SELINUX=permissive/'

    - name: Turn off swap config file
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^([^#].*\bswap\b.*)$'
        replace: '# \1'

    - name: Turn off swap
      ansible.builtin.shell: swapdoff -a

    - name: Create file to start modules
      ansible.builtin.file:
        path: /etc/modules-load.d/k8s.conf
        state: touch
        mode: '0544'

    - name: Write modules in file
      ansible.builtin.blockinfile:
        path: /etc/modules-load.d/k8s.conf
        block: |
          overlay
          br_netfilter

    - name: Create file to turn on core options 
      ansible.builtin.file:
        path: /etc/sysctl.d/k8s.conf
        state: touch
        mode: '0544'

    - name: Write core options in file
      ansible.builtin.blockinfile:
        path: /etc/sysctl.d/k8s.conf
        block: |
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Add listening ports in firewalld for master nodes
      ansible.posix.firewalld:
        port: '{{ item }}/tcp'
        permanent: true
        state: enabled
      loop: 
        - '6443'
        - '2379'
        - '10250'
        - '10259'
        - '10257'
      when: inventory_hostname in groups['master-nodes']
      notify:
        - Reload firewalld
        - Reboot server

    - name: Add listening ports in filewalld for worker nodes
      ansible.posix.filewalld:
        port: '{{ item }}/tcp'
        permanent: true
        state: enabled
      loop:
        - '10250'
        - '30000-32767'
      when: inventory_hostname in groups['worker-nodes']
      notify:
        - Reload firewalld
        - Reboot server

    - name: Download runC repo
      ansible.builtin.get_url:
        url: https://github.com/opencontainers/runc/releases/download/v1.2.5/runc.amd64
        dest: /opt/runc.amd64

    - name: Install runC
      ansible.builtin.shell: install -m 755 runc.amd64 /usr/local/sbin/runc
      args:     
        chdir: /opt/

    - name: Download containerd repo
      ansible.builtin.get_url:
        url: https://github.com/containerd/containerd/releases/download/v2.1.2/containerd-2.1.2-linux-amd64.tar.gz
        dest: /etc/containerd-2.1.2-linux-amd64.tar.gz

    - name: Unarchive containerd repo
      ansible.builtin.unarchive: 
        src: /opt/containerd-2.1.2-linux-amd64.tar.gz
        dest: /usr/local/
        remote_src: true

    - name: Download containerd systemd unit
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
        dest: /etc/systemd/system/containerd.service

    - name: Systemd reread configs
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Start containerd daemon
      ansible.builtin.systemd_service:
        name: containerd
        enabled: true
        state: started

    - name: Create dir for containerd 
      ansible.builtin.file:
        path: /etc/containerd/
        state: directory
        mode: '0755'

    - name: Copy containerd config default
      shell: containerd config default > /etc/containerd/config.toml

    - name: Change SystemdCgroup to true
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: '^\s*SystemdCgroup\s*=\s*false\s*$'
        replace: 'SystemdCgroup = true'
      register: containerd_config

    - name: Restart containerd daemon
      ansible.builtin.systemd_service:
        name: containerd
        enabled: true
        state: restarted
      when: containerd_config.changed = true

    

- name: Install docker for master nodes and jumphosts
  when: inventory_hostname in groups['master-nodes'] or inventory_hostname in groups['jump-hosts']
  block:
    - name: Install repo docker
      ansible.builtin.command: "dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo"
  
    - name: Install docker
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - docker-buildx-plugin 
        state: present

    - name: Starting docker daemon
      ansible.builtin.systemd_service:
        name: docker
        enabled: true
        state: started

    - name: Create new group for docker
      ansible.builtin.group:
        name: docker
        state: present


# - name: Update && upgrade
#   ansible.builtin.dnf:
#     name: "*"
#     state: latest
#     update_cache: yes

- name: Add user to group docker
  ansible.builtin.user:
    name: luver
    groups: luver,docker
    state: present
    append: true
  register: add_to_docker_group
  notify:
    - Reboot server